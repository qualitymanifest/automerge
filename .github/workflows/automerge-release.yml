name: Auto Merge Release Branches

on:
  push:
    branches:
      - 'release/*'

jobs:
  update-release-branches:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.AUTOMERGE_TOKEN }}

    steps:
    # Github doesn't automatically fetch full history which will cause "fatal: refusing to merge unrelated histories"
    - name: Fetch full repository history
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.AUTOMERGE_TOKEN }}

    - name: Set up Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Get the current branch name
      run: echo "CURRENT_BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

    - name: Get all release branches
      run: |
        RELEASE_BRANCHES=$(git branch -r | grep 'release/' | sed 's|origin/||' | sort -V | tr '\n' ' ')
        echo "sorted release branches:"
        echo $RELEASE_BRANCHES
        echo "RELEASE_BRANCHES=${RELEASE_BRANCHES}" >> $GITHUB_ENV

    - name: Determine next release branch
      run: |
        CURRENT_VERSION=$(echo "$CURRENT_BRANCH" | grep -oP '\d+(\.\d+)*')
        SKIP_AUTOMERGE_GTE_VERSION="${{ vars.SKIP_AUTOMERGE_GTE_VERSION }}"
        NEXT_BRANCH=""
        for BRANCH in $RELEASE_BRANCHES; do
          VERSION=$(echo "$BRANCH" | grep -oP '\d+(\.\d+)*')
          if [[ -n "$SKIP_AUTOMERGE_GTE_VERSION" ]] && dpkg --compare-versions "$VERSION" gte "$SKIP_AUTOMERGE_GTE_VERSION"; then
            echo "Greater than or equal to skip version"
            echo $SKIP_AUTOMERGE_GTE_VERSION
            echo $VERSION
            break
          fi
          if dpkg --compare-versions "$VERSION" gt "$CURRENT_VERSION"; then
            NEXT_BRANCH=$BRANCH
            break
          fi
        done
        echo "NEXT_BRANCH=${NEXT_BRANCH}" >> $GITHUB_ENV

    - name: Merge current branch into next branch
      if: env.NEXT_BRANCH != ''
      run: |
        git checkout $NEXT_BRANCH
        git merge --no-ff --no-edit release/$CURRENT_BRANCH
        git push origin $NEXT_BRANCH